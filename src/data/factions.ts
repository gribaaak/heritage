import type {
  AppearanceOptionKey,
  AppearanceOptionSet,
  CharacterAppearance,
  Faction,
  Gender
} from './types';

const baseAppearanceOptions: AppearanceOptionSet = {
  hairStyle: [
    '–î–ª–∏–Ω–Ω—ã–µ –∫–æ—Å—ã',
    '–ö–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä—è–¥–∏',
    '–•–≤–æ—Å—Ç',
    '–†–∞—Å–ø—É—â–µ–Ω–Ω—ã–µ –≤–æ–ª–æ—Å—ã',
    '–£–ª–æ–∂–µ–Ω–Ω—ã–µ –ª–æ–∫–æ–Ω—ã'
  ],
  hairColor: ['–°–≤–µ—Ç–ª—ã–µ', '–†—É—Å—ã–µ', '–¢–µ–º–Ω—ã–µ', '–ú–µ–¥–Ω—ã–µ', '–ß—ë—Ä–Ω—ã–µ'],
  faceShape: ['–û–≤–∞–ª—å–Ω–æ–µ', '–ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ', '–¢—Ä–µ—É–≥–æ–ª—å–Ω–æ–µ', '–ö—Ä—É–≥–ª–æ–µ'],
  eyeShape: ['–ú–∏–Ω–¥–∞–ª–µ–≤–∏–¥–Ω—ã–µ', '–ö—Ä—É–≥–ª—ã–µ', '–£–∑–∫–∏–µ'],
  eyeColor: ['–°–µ—Ä—ã–µ', '–ö–∞—Ä–∏–µ', '–°–∏–Ω–∏–µ', '–ó–µ–ª—ë–Ω—ã–µ', '–û—Ä–µ—Ö–æ–≤—ã–µ'],
  nose: ['–ü—Ä—è–º–æ–π', '–û—Ä–ª–∏–Ω—ã–π', '–ö—É—Ä–Ω–æ—Å—ã–π'],
  lips: ['–¢–æ–Ω–∫–∏–µ', '–ü–æ–ª–Ω—ã–µ', '–°—Ä–µ–¥–Ω–∏–µ'],
  accessory: ['–ë–µ–∑ —É–∫—Ä–∞—à–µ–Ω–∏–π', '–¢–æ—Ä—Å —Å –∞–º—É–ª–µ—Ç–æ–º', '–õ–æ–±–Ω–∞—è –ø–æ–≤—è–∑–∫–∞', '–°–µ—Ä—å–≥–∏', '–®—Ä–∞–º –Ω–∞ —â–µ–∫–µ']
};

const factionsData: Faction[] = [
  {
    id: 'varyagi',
    name: '–í–∞—Ä—è–≥–∏',
    description:
      '–°–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–µ –º–æ—Ä–µ—Ö–æ–¥—ã –∏ —Ç–æ—Ä–≥–æ–≤—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—ã–≥—Ä–∞–ª–∏ –≤–∞–∂–Ω—É—é —Ä–æ–ª—å –≤ —Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞–Ω–Ω–µ–π –†—É—Å–∏.',
    modernEquivalent: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∫–∞–Ω–¥–∏–Ω–∞–≤—ã –∏ –∂–∏—Ç–µ–ª–∏ —Å–µ–≤–µ—Ä–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–æ—Å—Å–∏–∏.',
    avatarEmoji: 'üõ°Ô∏è',
    maleNames: ['–†—é—Ä–∏–∫', '–ò–≥–æ—Ä—å', '–û–ª–µ–≥', '–¢—Ä—É–≤–æ—Ä', '–ì–µ–ª—å–º–æ–Ω–¥'],
    femaleNames: ['–û–ª—å–≥–∞', '–†–æ–≥–Ω–µ–¥–∞', '–ò–Ω–≥–∞', '–°–∏–≥—Ä–∏–¥', '–•–µ–ª—å–≥–∞'],
    baseClothing: ['–ú–µ—Ö–æ–≤–æ–π –ø–ª–∞—â', '–õ—å–Ω—è–Ω–æ–π –∫–∞—Ñ—Ç–∞–Ω', '–ö–æ–∂–∞–Ω–∞—è –∫—É—Ä—Ç–∫–∞'],
    optionsExtension: {
      appearance: {
        hairColor: ['–ü—à–µ–Ω–∏—á–Ω—ã–µ', '–ü–µ–ø–µ–ª—å–Ω—ã–µ', '–†—ã–∂–∏–µ'],
        accessory: ['–†—É–Ω–Ω—ã–π –∞–º—É–ª–µ—Ç', '–ú–µ—Ö–æ–≤–æ–π –≤–æ—Ä–æ—Ç', '–ö–æ–ª—å—á—É–≥–∞']
      },
      clothing: ['–ö–æ–ª—å—á—É–∂–Ω—ã–π –¥–æ—Å–ø–µ—Ö', '–ü–ª–∞—â —Å —Ñ–∏–±—É–ª–æ–π']
    }
  },
  {
    id: 'prusy',
    name: '–ü—Ä—É—Å—Å—ã',
    description:
      '–ó–∞–ø–∞–¥–Ω–æ–±–∞–ª—Ç–∏–π—Å–∫–∏–µ –ø–ª–µ–º–µ–Ω–∞, –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–≤–æ–∏–º —Ä–µ–º–µ—Å–ª–æ–º –∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ–º —Ç–µ–≤—Ç–æ–Ω—Å–∫–∏–º —Ä—ã—Ü–∞—Ä—è–º.',
    modernEquivalent: '–ù–∞—Å–ª–µ–¥–∏–µ –≤ –∫—É–ª—å—Ç—É—Ä–∞—Ö –∂–∏—Ç–µ–ª–µ–π –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –∏ —Å–µ–≤–µ—Ä–Ω–æ–π –ü–æ–ª—å—à–∏.',
    avatarEmoji: 'ü™ì',
    maleNames: ['–í–∞–π–¥–µ', '–ì–ª–∞–≤–∏—Å', '–î–æ–≤—Å–ø—Ä—É–Ω–∫', '–†–æ–º–æ–≤–∏–¥', '–°—É–¥–æ–≤–∏—Ç'],
    femaleNames: ['–í–∏–¥–∞—Ä–Ω–∞', '–ì–ª–æ–±–µ', '–ú–∏–ª–¥–∞', '–î–µ–≤–∏–Ω–∞', '–í–∞–π–¥–µ–ª–æ—Ç–∫–∞'],
    baseClothing: ['–¢–∫–∞–Ω—ã–π –ø–ª–∞—â', '–ö–æ—Ä–æ—Ç–∫–∏–π –∂—É–ø–∞–Ω', '–ü–ª–µ—Ç—ë–Ω–∞—è –±–µ–∑—Ä—É–∫–∞–≤–∫–∞'],
    optionsExtension: {
      appearance: {
        hairStyle: ['–ó–∞–ø–ª–µ—Ç—ë–Ω–Ω—ã–µ –∫–æ—Å—ã', '–ü–æ–ª—É–≤–æ–∑–¥—É—à–Ω—ã–µ –ª–æ–∫–æ–Ω—ã'],
        accessory: ['–Ø–Ω—Ç–∞—Ä–Ω–æ–µ –æ–∂–µ—Ä–µ–ª—å–µ', '–ì–æ–ª–æ–≤–Ω–∞—è –ª–µ–Ω—Ç–∞']
      },
      clothing: ['–Ø–Ω—Ç–∞—Ä–Ω—ã–π –ø–ª–∞—â', '–ñ—É–ø–∞–Ω —Å –≤—ã—à–∏–≤–∫–æ–π']
    }
  },
  {
    id: 'zemaites',
    name: '–ñ–µ–º–∞–π—Ç—ã',
    description: '–°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—ã–µ –∂–∏—Ç–µ–ª–∏ –∑–∞–ø–∞–¥–Ω–æ–π —á–∞—Å—Ç–∏ –õ–∏—Ç–≤—ã, –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–≤–æ–µ–π —Å—Ç–æ–π–∫–æ—Å—Ç—å—é.',
    modernEquivalent: '–ß–∞—Å—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ª–∏—Ç–æ–≤—Å–∫–æ–≥–æ –Ω–∞—Ä–æ–¥–∞.',
    avatarEmoji: 'üõ∂',
    maleNames: ['–ú–∏–Ω–¥–∞—É–≥–∞—Å', '–í–∏—Ç–∞—É—Ç–∞—Å', '–¢–∞—É—Ç–∏—Å', '–ñ–∏–≥–∏–º–∞–Ω—Ç–∞—Å', '–õ–∞—É—Ä–∏–Ω–∞—Å'],
    femaleNames: ['–ê—É—Å—Ç–µ—è', '–Æ—Ä–∞—Ç–µ', '–ì—Ä–∞–∂–∏–Ω–∞', '–î–∞–∏–Ω—è', '–†—É—Ç–∞'],
    baseClothing: ['–õ—å–Ω—è–Ω–∞—è —Ç—É–Ω–∏–∫–∞', '–ü–æ—è—Å —Å –æ—Ä–Ω–∞–º–µ–Ω—Ç–æ–º'],
    optionsExtension: {
      appearance: {
        accessory: ['–í–µ–Ω–æ–∫ –∏–∑ —Ç—Ä–∞–≤', '–û—Ä–Ω–∞–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—è—Å'],
        hairStyle: ['–ó–∞–ø–ª–µ—Ç—ë–Ω–Ω–∞—è –∫–æ—Ä–æ–Ω–∞', '–°–≤–æ–±–æ–¥–Ω—ã–µ –≤–æ–ª–Ω—ã']
      },
      clothing: ['–ü–ª–∞—â —Å —ç—Ç–Ω–∏—á–µ—Å–∫–∏–º —É–∑–æ—Ä–æ–º']
    }
  },
  {
    id: 'kurshi',
    name: '–ö—É—Ä—à–∏',
    description:
      '–ë–∞–ª—Ç–∏–π—Å–∫–∏–µ –º–æ—Ä–µ—Ö–æ–¥—ã –∏ –≤–æ–∏–Ω—ã, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞–≤—à–∏–µ –ø–æ–±–µ—Ä–µ–∂—å–µ –ë–∞–ª—Ç–∏–∫–∏ –≤ —Ä–∞–Ω–Ω–µ–º –°—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å–µ.',
    modernEquivalent: '–ß–∞—Å—Ç—å –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è –õ–∞—Ç–≤–∏–∏.',
    avatarEmoji: '‚öì',
    maleNames: ['–õ–∞–º–µ—Å', '–ò–º–∞–Ω—Ç—Å', '–í–∏–ª–∏—Å', '–ì–∏–Ω—Ç—Å', '–û—Å–∏—Å'],
    femaleNames: ['–õ–∞–π–º–∞', '–ì—É–Ω–∞', '–î–∞—Ü–µ', '–ú–∞—Ä–∞', '–ê–≥–Ω–µ—Å–µ'],
    baseClothing: ['–ú–æ—Ä—Å–∫–æ–π –ø–ª–∞—â', '–ü–ª–æ—Ç–Ω–∞—è –∫—É—Ä—Ç–∫–∞'],
    optionsExtension: {
      appearance: {
        accessory: ['–ú–æ—Ä—Å–∫–æ–π –∞–º—É–ª–µ—Ç', '–¢–æ—Ä–≥–æ–≤–∞—è —Å—É–º–∫–∞'],
        hairStyle: ['–ü–æ–¥–±—Ä–∏—Ç—ã–µ –≤–∏—Å–∫–∏', '–î–ª–∏–Ω–Ω–∞—è —á–µ–ª–∫–∞']
      },
      clothing: ['–ü–ª–∞—â —Å –º–µ—Ö–æ–≤–æ–π –æ—Ç–¥–µ–ª–∫–æ–π', '–ö–æ–∂–∞–Ω—ã–π –ø–æ—è—Å —Å –ø–æ–¥–≤–µ—Å–∫–∞–º–∏']
    }
  },
  {
    id: 'latgaly',
    name: '–õ–∞—Ç–≥–∞–ª—ã',
    description:
      '–ü–ª–µ–º–µ–Ω–∞ –≤–æ—Å—Ç–æ—á–Ω–æ–π –õ–∞—Ç–≤–∏–∏, –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–≤–æ–µ–π –∑–µ–º–ª–µ–¥–µ–ª—å—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä–æ–π –∏ —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Å–≤—è–∑—è–º–∏.',
    modernEquivalent: '–í–∫–ª–∞–¥ –≤ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∞—Ç—ã—à—Å–∫–æ–≥–æ –Ω–∞—Ä–æ–¥–∞.',
    avatarEmoji: 'üåæ',
    maleNames: ['–†–∞–π—Ç–∏—Å', '–≠–¥–≤–∏–Ω—Å', '–ê—Ä—Ç—É—Ä—Å', '–Ø–Ω–∏—Å', '–ê–ª–¥–∏—Å'],
    femaleNames: ['–ò–ª–∑–µ', '–õ–∏–≥–∏—Ç–∞', '–ú–∞—Ä–∏—Å', '–ê–Ω–µ—Ç–µ', '–î–∞–π–≥–∞'],
    baseClothing: ['–ü–æ–ª–æ—Ç–Ω—è–Ω–∞—è —Ä—É–±–∞—Ö–∞', '–õ—å–Ω—è–Ω–æ–π —Å–∞—Ä–∞—Ñ–∞–Ω'],
    optionsExtension: {
      appearance: {
        accessory: ['–ë–∏—Å–µ—Ä–Ω–∞—è –≥–∏—Ä–ª—è–Ω–¥–∞', '–¢–∫–∞–Ω—ã–π –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä']
      },
      clothing: ['–ñ–µ–º—á—É–∂–Ω–∞—è –Ω–∞–∫–∏–¥–∫–∞']
    }
  },
  {
    id: 'yotvingi',
    name: '–Ø—Ç–≤—è–≥–∏',
    description:
      '–í–æ–∏–Ω—ã –∑–∞–ø–∞–¥–Ω–æ–±–∞–ª—Ç–∏–π—Å–∫–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∂–∏–ª–∏ –º–µ–∂–¥—É –õ–∏—Ç–≤–æ–π –∏ –ü–æ–ª—å—à–µ–π.',
    modernEquivalent: '–í–ª–∏—è–Ω–∏–µ –∑–∞–º–µ—Ç–Ω–æ –≤ –∫—É–ª—å—Ç—É—Ä–∞—Ö –ü–æ–¥–ª—è—à—å—è –∏ –°—É–≤–∞–ª–∫–æ–≤.',
    avatarEmoji: 'üèπ',
    maleNames: ['–°–∫—É–º–∞–Ω–¥', '–ö—É–º–µ–¥', '–°–∏—Ä–ø—É—Ç–∏—Å', '–í–æ–π—à–µ–ª–∫', '–ì–∏–Ω—Ç–∞—Ä–∞—Å'],
    femaleNames: ['–ë–∏—Ä—É—Ç–µ', '–°—É–¥–∏–Ω–∞', '–ú–∏–ª—å–¥–∞', '–ê—É—à—Ä–∞', '–ò–µ–≤–∞'],
    baseClothing: ['–ë–æ–µ–≤–æ–π –ø–ª–∞—â', '–ö–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è'],
    optionsExtension: {
      appearance: {
        accessory: ['–ë–æ–µ–≤—ã–µ –∫—Ä–∞—Å–∫–∏', '–ó–∞—â–∏—Ç–Ω—ã–π –±—Ä–∞—Å–ª–µ—Ç'],
        hairStyle: ['–ó–∞–ø–ª–µ—Ç—ë–Ω–Ω—ã–π –≥—Ä–µ–±–µ–Ω—å', '–í—ã—Å–æ–∫–∏–π –ø—É—á–æ–∫']
      },
      clothing: ['–ö–æ–∂–∞–Ω—ã–π –Ω–∞–≥—Ä—É–¥–Ω–∏–∫', '–®–µ—Ä—Å—Ç—è–Ω–æ–π –ø–ª–∞—â']
    }
  }
];

export const factions = factionsData;

export const getAppearanceOptions = (factionId: string): AppearanceOptionSet => {
  const faction = factions.find((item) => item.id === factionId);
  if (!faction) {
    return baseAppearanceOptions;
  }

  const merged: AppearanceOptionSet = { ...baseAppearanceOptions };

  if (faction.optionsExtension?.appearance) {
    (Object.keys(faction.optionsExtension.appearance) as AppearanceOptionKey[]).forEach((key) => {
      const extra = faction.optionsExtension?.appearance?.[key] ?? [];
      const base = baseAppearanceOptions[key];
      merged[key] = Array.from(new Set([...base, ...extra]));
    });
  }

  return merged;
};

export const getClothingOptions = (factionId: string): string[] => {
  const faction = factions.find((item) => item.id === factionId);
  if (!faction) {
    return baseClothingOptions;
  }

  const extras = faction.optionsExtension?.clothing ?? [];
  return Array.from(new Set([...faction.baseClothing, ...extras, ...baseClothingOptions]));
};

const baseClothingOptions = ['–ë–∞–∑–æ–≤–∞—è —Ç—É–Ω–∏–∫–∞', '–ü—É—Ç–µ–≤–æ–π –ø–ª–∞—â', '–£—á–µ–±–Ω–∞—è –±—Ä–æ–Ω—è'];

export const getInitialAppearance = (factionId: string): CharacterAppearance => {
  const options = getAppearanceOptions(factionId);
  return {
    hairStyle: options.hairStyle[0],
    hairColor: options.hairColor[0],
    faceShape: options.faceShape[0],
    eyeShape: options.eyeShape[0],
    eyeColor: options.eyeColor[0],
    nose: options.nose[0],
    lips: options.lips[0],
    accessory: options.accessory[0]
  };
};

export const getRandomName = (faction: Faction, gender: Gender): string => {
  const pool = gender === 'male' ? faction.maleNames : faction.femaleNames;
  if (pool.length === 0) {
    return '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π –≥–µ—Ä–æ–π';
  }
  return pool[Math.floor(Math.random() * pool.length)];
};

export const getRandomFromArray = <T,>(options: T[]): T => {
  return options[Math.floor(Math.random() * options.length)];
};
